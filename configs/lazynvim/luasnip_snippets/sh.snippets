# https://github.com/honza/vim-snippets/blob/master/snippets/sh.snippets
# The content in `<vimstring>` will be evaluated by vim.api.nvim_exec("echo " .. vimstring, true)`
# ------------------------------------------------------------------

# sh is not supported due to [[]]
# if sh is not supported, it can be replaced as a simpler expression
# if [[ "\$0" = *"bash" ]] || [[ "\$0" = *"zsh" ]]; then
snippet dirs "get the directory folder(shell supported)"
		BASE_NAME="\$(basename -- "\$0")"
		case "\$BASE_NAME" in
			-bash|bash|-zsh|zsh|-sh|sh)
				# the first if is to supporting REPL
				DIR="`expand("%:p:h")`"
				;;
			*)
				DIR="\$( cd "\$(dirname "\$(readlink -f "\$0")")" || exit ; pwd -P )"
				;;
		esac

snippet dir "get the directory folder for cur scripts"
		DIR="\$( cd "\$(dirname "\$(readlink -f "\$0")")" || exit ; pwd -P )"

snippet ife "if file exists"
		if [ -e ${1:filename} ]; then
				rm $1
		fi

snippet EOFmy "EOF(usually for comments)"
	false << "${1|PY,MARKDOWN,EOF|}" > /dev/null
	${2:Comments or content}
	${1}

snippet ifve "if a variable is empty"
    if [ -z \$1 ] || [ -z \$2 ]; then
        echo "Empty arguments"
        exit 0
    fi

snippet date "get current datetime"
	datetime=\`date "+%Y-%m-%d_%H:%M:%S"\`


snippet tplexp "templates for experiments"
	#!/bin/sh
	
	set -x # show command
	set -e # Error on exception
	
	DIR="$(
		cd "\$(dirname "\$(readlink -f "\$0")")" || exit
		pwd -P
	)"
	
	# Go to the project name
	DIR="\`dirname \$DIR\`"
	DIR="\`dirname \$DIR\`"
	
	cd "\$DIR" || return
	
	# Variables
	# 1. Default Parameters
	PY="python"
	
	# 2. Parameters from file
	if [ -e \$DIR/.env ]; then
	  echo "Loading environment variables from \$DIR/.env"
	  source \$DIR/.env
	  # export $(grep -v '^#' \$DIR/.env | xargs)  # sometimes only this will work
	else
	  echo "No .env file found"
	fi
	
	# 3. experiments specific parameters in each function
	_example() {
	  # default 
	  UBS_BT_RISK_AVERSION=40.
	  OPTIND=1  # Reset OPTIND to 1 to handle multiple calls to getopts
	  while getopts "r:" opt; do
	    case \$opt in
	      r) UBS_BT_RISK_AVERSION="\$OPTARG" ;;
	      *) echo "Invalid option: -\$OPTARG" >&2; exit 1 ;;
	    esac
	  done
	  export UBS_BT_RISK_AVERSION
	
	  \$PY scripts/a.py
	}
	
	\$1 "\${@:2}"  # pass the remain pawrameters

autosnippet pydap "Python DAP Config"
	python -m debugpy --listen 0.0.0.0:5678 --wait-for-client 

autosnippet pypdb "add pdb module and continue"
	python -m ipdb -c c 
