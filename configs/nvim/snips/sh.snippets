# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet root "Who am I!" b
if [ \`whoami\` != root ]; then
	echo Please run this script as root or using sudo
	exit
fi
endsnippet

snippet getopts "Get Opts" b
# https://stackoverflow.com/a/34531699
while getopts ":a:" opt; do
    case $opt in
        a)
        echo "-a was triggered, Parameter: $OPTARG" >&2
        ;;
        \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 1
        ;;
        :)
        echo "Option -$OPTARG requires an argument." >&2
        exit 1
        ;;
    esac
done
endsnippet

snippet confirm "Confirm (y/n)" b
while read -p "Continue (y/n)?" CONFIRM_CONTINUE ; do
	case "$CONFIRM_CONTINUE" in
	y|Y )
		break
		;;
	n|N )
		echo "Exited"
		exit 1
		;;
	* ) echo "Invalid";;
	esac
done
endsnippet

snippet dir "Description" b
if [ \$0 = "-bash" -o \$0 = "-zsh" -o \$0 = "zsh"  ]; then
	DIR=\`pwd\`
else
	DIR="$( cd "$(dirname $(readlink -f "\$0"))" ; pwd -P )"
fi
endsnippet

snippet set "set script" b
set -x  # show command
set -e  # Error on exception
endsnippet

snippet ol "Outlines" b
# # Outlines: ${1:header}
endsnippet

snippet ol2 "Outlines" b
# ## Outlines: ${1:header}
endsnippet

snippet pypdb "add pdb module and continue" bA
python -m ipdb -c c 
endsnippet

snippet cudav "Cuda Visible Device" b
CUDA_VISIBLE_DEVICES=1,2
endsnippet
