[[snippets]]
  description = "grep cn"
  command = "rg '[\\p{Han}]'"
  output = ""

[[snippets]]
  description = "conda create"
  command = "conda create -y -n <env_name=XXX> python=<py_version=3.8>"
  output = ""

[[snippets]]
  description = "rsync high freq used"
  command = "rsync  -avzrP -e ssh XXX XXX  # z(compression) P(progress)"
  output = ""

[[snippets]]
  description = "black format"
  command = "black .  -l 120"
  output = ""

[[snippets]]
  description = "terminalizer record (fix sharing bug... https://www.terminalizer.com/view/a6b2320b5691 )"
  command = "terminalizer record XXX -d zsh"
  output = ""

[[snippets]]
  description = "process tree"
  command = "pstree -pas"
  output = ""

[[snippets]]
  description = "jupyter --ip 0.0.0.0"
  command = "jupyter notebook --no-browser --port 9000 --ip 0.0.0.0"
  output = ""

[[snippets]]
  description = "jupyter --ip `hostname`"
  command = "jupyter notebook --no-browser --port 9000 --ip `hostname` # You can not access 127.0.0.1 when binding hostname"
  output = ""

[[snippets]]
  description = "tmux list pane"
  command = "tmux list-panes -a -F \"#{pane_pid} #{session_name}:#{window_index}:#{pane_index}\""
  output = ""

[[snippets]]
  description = "py-spy record"
  command = "py-spy record -o profile.svg -- <cmd>"
  output = ""

[[snippets]]
  description = "git add me qlib"
  command = "git remote add me git@github.com:you-n-g/qlib.git"
  output = ""

[[snippets]]
  description = "py-spy top"
  command = "sudo env \"PATH=$PATH\"  py-spy top --pid"
  output = ""

[[snippets]]
  description = "snakeviz"
  command = "snakeviz -s -H `hostname` stats_out"
  output = ""

[[snippets]]
  description = "py-spy dump"
  command = "sudo env \"PATH=$PATH\"  py-spy dump --pid"
  output = ""

[[snippets]]
  description = "autossh proxy"
  command = "autossh -R 6489:127.0.0.1:6489 XXX # http proxy deployed locally, XXX configured in .ssh/config"
  output = ""

[[snippets]]
  description = "fzf preview for output lines"
  command = "fzf  --preview \"echo {} | bat -l  Python --style plain # --color=always\" --preview-window :wrap"
  output = ""

[[snippets]]
  description = "tmux edit pane name"
  command = "printf '\\033]2;%s\\033\\\\' '<pane-name>'"
  output = ""

[[snippets]]
  description = "tmux enable boarder (this will conflict with vim-slime)"
  command = "tmux set pane-border-status top"
  output = ""

[[snippets]]
  description = "for each dir git status"
  command = "for d in `ls` ; do  cd $d ; echo \"=================`pwd`\" ;  git status  ; cd .. ;  done"
  output = ""

[[snippets]]
  description = "clone my style project"
  command = "clone.py all <source env=online_V05> <target env=online_V06>  <source project path=/home/xiaoyang/repos/online3rd_projects/V05> <target project path=/home/xiaoyang/repos/online3rd_projects/V06>"
  output = ""

[[snippets]]
  description = "conda clone"
  command = "conda create --name <env_name=online_V06>_gpu --clone <env_name=online_V06>"
  output = ""

[[snippets]]
  description = "reload tmux config"
  command = "tmux source ~/.tmux.conf"
  output = ""

[[snippets]]
  description = "start mlflow ui with long timeout"
  command = "GUNICORN_CMD_ARGS='--timeout 120'  mlflow ui -h `hostname` -p <port=5000>"
  output = ""

[[snippets]]
  description = "initial the tmux session for coding"
  command = "tmux rename-window code ; tmux new-window -n code_shell ; tmux new-window -n ops ; tmux new-window -n ops_shell ; tmux new-window -n service"
  output = ""

[[snippets]]
  description = "my repos"
  command = "git clone git@ssh.dev.azure.com:v3/you-n-g/qutils/cluster_manager ; git clone git@ssh.dev.azure.com:v3/you-n-g/qutils/qutils"
  output = ""

[[snippets]]
  description = "grep with ignore"
  command = "rg  --no-ignore --no-ignore-dot <grep_pattern=XXX> <grep_path=.>"
  output = ""

[[snippets]]
  description = "clean jupyter output"
  command = "ipynb_output_filter.py < <notebook=name.ipynb> > _yx_tmp  &&  mv _yx_tmp <notebook=name.ipynb> "
  output = "Nothing"

[[snippets]]
  description = "add git ignore"
  command = "cp ~/deploy/configs/git/py.gitignore .gitignore"
  output = ""

[[snippets]]
  description = "Forward proxy"
  command = "ssh xiaoyang@52.229.162.130 -L0.0.0.0:6489:0.0.0.0:6489  -D 0.0.0.0:8964"
  output = ""

[[snippets]]
  description = "agedu"
  command = "agedu --auth none -f agedu.dat -w --address 0.0.0.0:5432"
  output = ""

[[snippets]]
  description = "install favorate package"
  command = "sh ~/deploy/deploy_apps/install_fav_py_pack.sh"
  output = ""

[[snippets]]
  description = "python minimal install after create conda env"
  command = "pip install --user ipdb ipython neovim fire yapf pylint black"
  output = ""

[[snippets]]
  description = "conda remove"
  command = "conda remove --name <env_name=XXX> --all"
  output = ""

[[snippets]]
  description = "view view file head"
  command = "head -n <top=50> <fname=600519.csv> | vim -"
  output = ""

[[snippets]]
  description = "git clean all untracked data"
  command = "git clean -d -x -f"
  output = ""

[[snippets]]
  description = "create qlib-based project"
  command = "mkdir <name> && cd <name> && cp.py --name <name> --py_ver 3.8 all --inst_qlib"
  output = ""

[[snippets]]
  description = "install my env"
  command = "sudo apt-get install -y git curl &&  git clone https://github.com/you-n-g/deploy && cd deploy &&  ./deploy.sh  # make sure you can sudo without password"
  output = ""

[[snippets]]
  description = "docker run, interactive, and remove example"
  command = "docker run -it --rm <img=kaggle/python:latest> /bin/bash"
  output = ""

[[snippets]]
  description = "qlib pylint"
  command = "pylint --disable=C0104,C0114,C0115,C0116,C0301,C0302,C0411,C0413,C1802,R0201,R0401,R0801,R0902,R0903,R0911,R0912,R0913,R0914,R0915,R1720,W0105,W0123,W0201,W0511,W0613,W1113,W1514,E0401,E1121,C0103,C0209,R0402,R1705,R1710,R1725,R1735,W0102,W0212,W0221,W0223,W0231,W0237,W0612,W0621,W0622,W0703,W1309,E1102,E1136 --const-rgx='[a-z_][a-z0-9_]{2,30}$' qlib --init-hook \"import astroid; astroid.context.InferenceContext.max_inferred = 500\""
  output = ""

[[snippets]]
  description = "set visible gpu/cuda device"
  command = "export CUDA_VISIBLE_DEVICES=1,2"
  output = ""

[[snippets]]
  description = "add qlib remote repo"
  command = "git remote add <user> https://github.com/<user>/qlib ; git fetch <user> <branch=main>  && git checkout <user>/<branch=main>"
  output = ""

[[snippets]]
  description = "git ignore change of specific file (Ref https://stackoverflow.com/a/1753078)"
  command = "git update-index --assume-unchanged <file list>"
  output = ""

[[snippets]]
  description = "neovim without any config:w"
  command = "vim -u NONE -U NONE -N -i NONE"
  output = ""

[[snippets]]
  description = "start with only lua config"
  command = "vim -u ~/deploy/configs/nvim/init_debug_lua.vim -U NONE -N -i NONE"
  output = ""

[[snippets]]
  description = "fast attach docker"
  command = "docker exec -it `docker ps -l --format '{{.Names}}'` bash"
  output = ""

[[snippets]]
  description = "git commit & skip precommit"
  command = "git commit --no-verify  -v"
  output = ""

[[snippets]]
  description = "Clear PageCache only"
  command = "sudo su  -c \"sync; echo 1 > /proc/sys/vm/drop_caches\""
  output = ""

[[snippets]]
  description = "sudo reserve most env variables"
  command = "sudo -E env \"PATH=$PATH\""
  output = ""

[[snippets]]
  description = "fast install torch"
  command = "pip install light-the-torch && ltt install torch"
  output = ""

[[snippets]]
  description = "Jupyter no password"
  command = " --NotebookApp.token='' --NotebookApp.password=''"
  output = ""

[[snippets]]
  description = "jupyter ascending prefix"
  command = "export JUPYTER_ASCENDING_EXECUTE_PORT=9000"
  output = ""

[[snippets]]
  description = "cd into lazy vim"
  command = "cd ~/.local/share/nvim/lazy/LazyVim"
  output = ""

[[snippets]]
  description = "ascending suite (jupyter and vim)"
  command = "_JPORT=9011 ; JUPYTER_ASCENDING_EXECUTE_PORT=$_JPORT jupyter notebook --no-browser --port $_JPORT --ip 0.0.0.0  --NotebookApp.token='' --NotebookApp.password='' # JUPYTER_ASCENDING_EXECUTE_PORT=$_JPORT vim"
  output = ""

[[snippets]]
  description = "create a project from Python project template based on copier"
  command = "copier gh:huxuan/serious-scaffold-python <project_path>"
  output = ""

[[snippets]]
  description = "Prompt"
  command = "fix grammars & typos"
  output = ""

[[snippets]]
  description = "Disable precommit like --no-verify (https://github.com/typicode/husky/issues/346) ; but I found both HUSKY_SKIP_HOOKS=1 and export HUSKY=0 don't work"
  command = "--no-verify"
  output = ""

[[snippets]]
  description = "create new Python project from scaffold (suppose you have already create the github project)"
  command = "git init && git add . && make dev && make pre-commit && git commit -a -m \"Init from serious-scaffold-python.\" && git remote add origin git@github.com:you-n-g/<project>.git && git branch -M main  && git push -u origin main --no-verify"
  output = ""

[[snippets]]
  description = "add user with only rsa keys"
  command = "sudo adduser <username> --disabled-password && sudo su <username> -c 'mkdir -p ~/.ssh/ && chmod 700 ~/.ssh/ && touch ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys'"
  output = ""

[[snippets]]
  description = "cd onedrive in windows WSL"
  command = "ONEDRIVE_PATH=$(cmd.exe /c echo %onedriveconsumer% 2> /dev/null | sed -e 's/C:/\\\\mnt\\\\c/g' | sed -e 's/\\\\/\\//g' | tr -d \"\\r\") ; cd $ONEDRIVE_PATH"
  output = ""

[[snippets]]
  description = "Python pretty print"
  command = "__import__(\"pprint\").pprint("
  output = ""

[[snippets]]
  description = "use gdb to attach to python program"
  command = "sudo `which gdb` python <pid>"
  output = ""

[[snippets]]
  description = "cprofile profiling debuggging"
  command = "python -m cProfile -s <sort_filed=time> -o <out_file=stat_out> <script=script.py>"
  output = ""
